$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 ; clock $end
  $var wire 1 < reset $end
  $var wire 8 = io_inputs_1 [7:0] $end
  $var wire 8 > io_inputs_0 [7:0] $end
  $var wire 8 ? io_outs_0 [7:0] $end
  $scope module HighQualityAdder $end
   $var wire 1 ; clock $end
   $var wire 1 < reset $end
   $var wire 8 = io_inputs_1 [7:0] $end
   $var wire 8 > io_inputs_0 [7:0] $end
   $var wire 8 ? io_outs_0 [7:0] $end
   $var wire 1 # Buffer_io_currentG $end
   $var wire 1 @ Buffer_io_currentP $end
   $var wire 1 # Buffer_io_outG $end
   $var wire 1 @ Buffer_io_outP $end
   $var wire 1 A GrayCell_io_currentG $end
   $var wire 1 $ GrayCell_io_currentP $end
   $var wire 1 # GrayCell_io_preG $end
   $var wire 1 % GrayCell_io_outG $end
   $var wire 1 & Buffer_1_io_currentG $end
   $var wire 1 ' Buffer_1_io_currentP $end
   $var wire 1 & Buffer_1_io_outG $end
   $var wire 1 ' Buffer_1_io_outP $end
   $var wire 1 B BlackCell_io_currentG $end
   $var wire 1 ( BlackCell_io_currentP $end
   $var wire 1 & BlackCell_io_preG $end
   $var wire 1 ' BlackCell_io_preP $end
   $var wire 1 C BlackCell_io_outG $end
   $var wire 1 ) BlackCell_io_outP $end
   $var wire 1 * Buffer_2_io_currentG $end
   $var wire 1 + Buffer_2_io_currentP $end
   $var wire 1 * Buffer_2_io_outG $end
   $var wire 1 + Buffer_2_io_outP $end
   $var wire 1 D BlackCell_1_io_currentG $end
   $var wire 1 , BlackCell_1_io_currentP $end
   $var wire 1 * BlackCell_1_io_preG $end
   $var wire 1 + BlackCell_1_io_preP $end
   $var wire 1 - BlackCell_1_io_outG $end
   $var wire 1 . BlackCell_1_io_outP $end
   $var wire 1 / Buffer_3_io_currentG $end
   $var wire 1 0 Buffer_3_io_currentP $end
   $var wire 1 / Buffer_3_io_outG $end
   $var wire 1 0 Buffer_3_io_outP $end
   $var wire 1 E BlackCell_2_io_currentG $end
   $var wire 1 1 BlackCell_2_io_currentP $end
   $var wire 1 / BlackCell_2_io_preG $end
   $var wire 1 0 BlackCell_2_io_preP $end
   $var wire 1 F BlackCell_2_io_outG $end
   $var wire 1 2 BlackCell_2_io_outP $end
   $var wire 1 % Buffer_4_io_currentG $end
   $var wire 1 $ Buffer_4_io_currentP $end
   $var wire 1 % Buffer_4_io_outG $end
   $var wire 1 $ Buffer_4_io_outP $end
   $var wire 1 & GrayCell_1_io_currentG $end
   $var wire 1 ' GrayCell_1_io_currentP $end
   $var wire 1 % GrayCell_1_io_preG $end
   $var wire 1 3 GrayCell_1_io_outG $end
   $var wire 1 C GrayCell_2_io_currentG $end
   $var wire 1 ) GrayCell_2_io_currentP $end
   $var wire 1 % GrayCell_2_io_preG $end
   $var wire 1 4 GrayCell_2_io_outG $end
   $var wire 1 - Buffer_5_io_currentG $end
   $var wire 1 . Buffer_5_io_currentP $end
   $var wire 1 - Buffer_5_io_outG $end
   $var wire 1 . Buffer_5_io_outP $end
   $var wire 1 / BlackCell_3_io_currentG $end
   $var wire 1 0 BlackCell_3_io_currentP $end
   $var wire 1 - BlackCell_3_io_preG $end
   $var wire 1 . BlackCell_3_io_preP $end
   $var wire 1 5 BlackCell_3_io_outG $end
   $var wire 1 6 BlackCell_3_io_outP $end
   $var wire 1 F BlackCell_4_io_currentG $end
   $var wire 1 2 BlackCell_4_io_currentP $end
   $var wire 1 - BlackCell_4_io_preG $end
   $var wire 1 . BlackCell_4_io_preP $end
   $var wire 1 G BlackCell_4_io_outG $end
   $var wire 1 7 BlackCell_4_io_outP $end
   $var wire 1 3 Buffer_6_io_currentG $end
   $var wire 1 ' Buffer_6_io_currentP $end
   $var wire 1 3 Buffer_6_io_outG $end
   $var wire 1 ' Buffer_6_io_outP $end
   $var wire 1 4 Buffer_7_io_currentG $end
   $var wire 1 ) Buffer_7_io_currentP $end
   $var wire 1 4 Buffer_7_io_outG $end
   $var wire 1 ) Buffer_7_io_outP $end
   $var wire 1 * GrayCell_3_io_currentG $end
   $var wire 1 + GrayCell_3_io_currentP $end
   $var wire 1 4 GrayCell_3_io_preG $end
   $var wire 1 8 GrayCell_3_io_outG $end
   $var wire 1 - GrayCell_4_io_currentG $end
   $var wire 1 . GrayCell_4_io_currentP $end
   $var wire 1 4 GrayCell_4_io_preG $end
   $var wire 1 9 GrayCell_4_io_outG $end
   $var wire 1 5 GrayCell_5_io_currentG $end
   $var wire 1 6 GrayCell_5_io_currentP $end
   $var wire 1 4 GrayCell_5_io_preG $end
   $var wire 1 : GrayCell_5_io_outG $end
   $var wire 1 G GrayCell_6_io_currentG $end
   $var wire 1 7 GrayCell_6_io_currentP $end
   $var wire 1 4 GrayCell_6_io_preG $end
   $var wire 1 H GrayCell_6_io_outG $end
   $var wire 1 @ pArray_0 $end
   $var wire 1 $ pArray_1 $end
   $var wire 1 ' pArray_2 $end
   $var wire 1 ( pArray_3 $end
   $var wire 1 + pArray_4 $end
   $var wire 1 , pArray_5 $end
   $var wire 1 0 pArray_6 $end
   $var wire 1 1 pArray_7 $end
   $scope module BlackCell $end
    $var wire 1 B io_currentG $end
    $var wire 1 ( io_currentP $end
    $var wire 1 & io_preG $end
    $var wire 1 ' io_preP $end
    $var wire 1 C io_outG $end
    $var wire 1 ) io_outP $end
   $upscope $end
   $scope module BlackCell_1 $end
    $var wire 1 D io_currentG $end
    $var wire 1 , io_currentP $end
    $var wire 1 * io_preG $end
    $var wire 1 + io_preP $end
    $var wire 1 - io_outG $end
    $var wire 1 . io_outP $end
   $upscope $end
   $scope module BlackCell_2 $end
    $var wire 1 E io_currentG $end
    $var wire 1 1 io_currentP $end
    $var wire 1 / io_preG $end
    $var wire 1 0 io_preP $end
    $var wire 1 F io_outG $end
    $var wire 1 2 io_outP $end
   $upscope $end
   $scope module BlackCell_3 $end
    $var wire 1 / io_currentG $end
    $var wire 1 0 io_currentP $end
    $var wire 1 - io_preG $end
    $var wire 1 . io_preP $end
    $var wire 1 5 io_outG $end
    $var wire 1 6 io_outP $end
   $upscope $end
   $scope module BlackCell_4 $end
    $var wire 1 F io_currentG $end
    $var wire 1 2 io_currentP $end
    $var wire 1 - io_preG $end
    $var wire 1 . io_preP $end
    $var wire 1 G io_outG $end
    $var wire 1 7 io_outP $end
   $upscope $end
   $scope module Buffer $end
    $var wire 1 # io_currentG $end
    $var wire 1 @ io_currentP $end
    $var wire 1 # io_outG $end
    $var wire 1 @ io_outP $end
   $upscope $end
   $scope module Buffer_1 $end
    $var wire 1 & io_currentG $end
    $var wire 1 ' io_currentP $end
    $var wire 1 & io_outG $end
    $var wire 1 ' io_outP $end
   $upscope $end
   $scope module Buffer_2 $end
    $var wire 1 * io_currentG $end
    $var wire 1 + io_currentP $end
    $var wire 1 * io_outG $end
    $var wire 1 + io_outP $end
   $upscope $end
   $scope module Buffer_3 $end
    $var wire 1 / io_currentG $end
    $var wire 1 0 io_currentP $end
    $var wire 1 / io_outG $end
    $var wire 1 0 io_outP $end
   $upscope $end
   $scope module Buffer_4 $end
    $var wire 1 % io_currentG $end
    $var wire 1 $ io_currentP $end
    $var wire 1 % io_outG $end
    $var wire 1 $ io_outP $end
   $upscope $end
   $scope module Buffer_5 $end
    $var wire 1 - io_currentG $end
    $var wire 1 . io_currentP $end
    $var wire 1 - io_outG $end
    $var wire 1 . io_outP $end
   $upscope $end
   $scope module Buffer_6 $end
    $var wire 1 3 io_currentG $end
    $var wire 1 ' io_currentP $end
    $var wire 1 3 io_outG $end
    $var wire 1 ' io_outP $end
   $upscope $end
   $scope module Buffer_7 $end
    $var wire 1 4 io_currentG $end
    $var wire 1 ) io_currentP $end
    $var wire 1 4 io_outG $end
    $var wire 1 ) io_outP $end
   $upscope $end
   $scope module GrayCell $end
    $var wire 1 A io_currentG $end
    $var wire 1 $ io_currentP $end
    $var wire 1 # io_preG $end
    $var wire 1 % io_outG $end
   $upscope $end
   $scope module GrayCell_1 $end
    $var wire 1 & io_currentG $end
    $var wire 1 ' io_currentP $end
    $var wire 1 % io_preG $end
    $var wire 1 3 io_outG $end
   $upscope $end
   $scope module GrayCell_2 $end
    $var wire 1 C io_currentG $end
    $var wire 1 ) io_currentP $end
    $var wire 1 % io_preG $end
    $var wire 1 4 io_outG $end
   $upscope $end
   $scope module GrayCell_3 $end
    $var wire 1 * io_currentG $end
    $var wire 1 + io_currentP $end
    $var wire 1 4 io_preG $end
    $var wire 1 8 io_outG $end
   $upscope $end
   $scope module GrayCell_4 $end
    $var wire 1 - io_currentG $end
    $var wire 1 . io_currentP $end
    $var wire 1 4 io_preG $end
    $var wire 1 9 io_outG $end
   $upscope $end
   $scope module GrayCell_5 $end
    $var wire 1 5 io_currentG $end
    $var wire 1 6 io_currentP $end
    $var wire 1 4 io_preG $end
    $var wire 1 : io_outG $end
   $upscope $end
   $scope module GrayCell_6 $end
    $var wire 1 G io_currentG $end
    $var wire 1 7 io_currentP $end
    $var wire 1 4 io_preG $end
    $var wire 1 H io_outG $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
1<
b00000000 =
b00000000 >
b00000000 ?
0@
0A
0B
0C
0D
0E
0F
0G
0H
#1
1;
#2
0;
#3
1;
#4
0;
#5
1;
#6
0;
#7
1;
#8
0;
#9
1;
